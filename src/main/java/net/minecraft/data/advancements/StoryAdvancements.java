package net.minecraft.data.advancements;

import java.util.function.Consumer;
import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.FrameType;
import net.minecraft.advancements.RequirementsStrategy;
import net.minecraft.advancements.critereon.ChangeDimensionTrigger;
import net.minecraft.advancements.critereon.CuredZombieVillagerTrigger;
import net.minecraft.advancements.critereon.DamagePredicate;
import net.minecraft.advancements.critereon.DamageSourcePredicate;
import net.minecraft.advancements.critereon.EnchantedItemTrigger;
import net.minecraft.advancements.critereon.EntityHurtPlayerTrigger;
import net.minecraft.advancements.critereon.InventoryChangeTrigger;
import net.minecraft.advancements.critereon.ItemPredicate;
import net.minecraft.advancements.critereon.LocationPredicate;
import net.minecraft.advancements.critereon.LocationTrigger;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.TranslatableComponent;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.ItemTags;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.ItemLike;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.StructureFeature;

/* loaded from: client_deobf_norm.jar:net/minecraft/data/advancements/StoryAdvancements.class */
public class StoryAdvancements implements Consumer<Consumer<Advancement>> {
   @Override // java.util.function.Consumer
   public void accept(Consumer<Advancement> consumer) {
      Advancement save = Advancement.Builder.advancement().parent(Advancement.Builder.advancement().parent(Advancement.Builder.advancement().parent(Advancement.Builder.advancement().display((ItemLike) Blocks.GRASS_BLOCK, (Component) new TranslatableComponent("advancements.story.root.title"), (Component) new TranslatableComponent("advancements.story.root.description"), new ResourceLocation("textures/gui/advancements/backgrounds/stone.png"), FrameType.TASK, false, false, false).addCriterion("crafting_table", InventoryChangeTrigger.TriggerInstance.hasItems(Blocks.CRAFTING_TABLE)).save(consumer, "story/root")).display((ItemLike) Items.WOODEN_PICKAXE, (Component) new TranslatableComponent("advancements.story.mine_stone.title"), (Component) new TranslatableComponent("advancements.story.mine_stone.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("get_stone", InventoryChangeTrigger.TriggerInstance.hasItems(ItemPredicate.Builder.item().of(ItemTags.STONE_TOOL_MATERIALS).build())).save(consumer, "story/mine_stone")).display((ItemLike) Items.STONE_PICKAXE, (Component) new TranslatableComponent("advancements.story.upgrade_tools.title"), (Component) new TranslatableComponent("advancements.story.upgrade_tools.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("stone_pickaxe", InventoryChangeTrigger.TriggerInstance.hasItems(Items.STONE_PICKAXE)).save(consumer, "story/upgrade_tools")).display((ItemLike) Items.IRON_INGOT, (Component) new TranslatableComponent("advancements.story.smelt_iron.title"), (Component) new TranslatableComponent("advancements.story.smelt_iron.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("iron", InventoryChangeTrigger.TriggerInstance.hasItems(Items.IRON_INGOT)).save(consumer, "story/smelt_iron");
      Advancement save2 = Advancement.Builder.advancement().parent(Advancement.Builder.advancement().parent(save).display((ItemLike) Items.IRON_PICKAXE, (Component) new TranslatableComponent("advancements.story.iron_tools.title"), (Component) new TranslatableComponent("advancements.story.iron_tools.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("iron_pickaxe", InventoryChangeTrigger.TriggerInstance.hasItems(Items.IRON_PICKAXE)).save(consumer, "story/iron_tools")).display((ItemLike) Items.DIAMOND, (Component) new TranslatableComponent("advancements.story.mine_diamond.title"), (Component) new TranslatableComponent("advancements.story.mine_diamond.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("diamond", InventoryChangeTrigger.TriggerInstance.hasItems(Items.DIAMOND)).save(consumer, "story/mine_diamond");
      Advancement save3 = Advancement.Builder.advancement().parent(save).display((ItemLike) Items.LAVA_BUCKET, (Component) new TranslatableComponent("advancements.story.lava_bucket.title"), (Component) new TranslatableComponent("advancements.story.lava_bucket.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("lava_bucket", InventoryChangeTrigger.TriggerInstance.hasItems(Items.LAVA_BUCKET)).save(consumer, "story/lava_bucket");
      Advancement save4 = Advancement.Builder.advancement().parent(save).display((ItemLike) Items.IRON_CHESTPLATE, (Component) new TranslatableComponent("advancements.story.obtain_armor.title"), (Component) new TranslatableComponent("advancements.story.obtain_armor.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).requirements(RequirementsStrategy.OR).addCriterion("iron_helmet", InventoryChangeTrigger.TriggerInstance.hasItems(Items.IRON_HELMET)).addCriterion("iron_chestplate", InventoryChangeTrigger.TriggerInstance.hasItems(Items.IRON_CHESTPLATE)).addCriterion("iron_leggings", InventoryChangeTrigger.TriggerInstance.hasItems(Items.IRON_LEGGINGS)).addCriterion("iron_boots", InventoryChangeTrigger.TriggerInstance.hasItems(Items.IRON_BOOTS)).save(consumer, "story/obtain_armor");
      Advancement.Builder.advancement().parent(save2).display((ItemLike) Items.ENCHANTED_BOOK, (Component) new TranslatableComponent("advancements.story.enchant_item.title"), (Component) new TranslatableComponent("advancements.story.enchant_item.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("enchanted_item", EnchantedItemTrigger.TriggerInstance.enchantedItem()).save(consumer, "story/enchant_item");
      Advancement save5 = Advancement.Builder.advancement().parent(save3).display((ItemLike) Blocks.OBSIDIAN, (Component) new TranslatableComponent("advancements.story.form_obsidian.title"), (Component) new TranslatableComponent("advancements.story.form_obsidian.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("obsidian", InventoryChangeTrigger.TriggerInstance.hasItems(Blocks.OBSIDIAN)).save(consumer, "story/form_obsidian");
      Advancement.Builder.advancement().parent(save4).display((ItemLike) Items.SHIELD, (Component) new TranslatableComponent("advancements.story.deflect_arrow.title"), (Component) new TranslatableComponent("advancements.story.deflect_arrow.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("deflected_projectile", EntityHurtPlayerTrigger.TriggerInstance.entityHurtPlayer(DamagePredicate.Builder.damageInstance().type(DamageSourcePredicate.Builder.damageType().isProjectile(true)).blocked(true))).save(consumer, "story/deflect_arrow");
      Advancement.Builder.advancement().parent(save2).display((ItemLike) Items.DIAMOND_CHESTPLATE, (Component) new TranslatableComponent("advancements.story.shiny_gear.title"), (Component) new TranslatableComponent("advancements.story.shiny_gear.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).requirements(RequirementsStrategy.OR).addCriterion("diamond_helmet", InventoryChangeTrigger.TriggerInstance.hasItems(Items.DIAMOND_HELMET)).addCriterion("diamond_chestplate", InventoryChangeTrigger.TriggerInstance.hasItems(Items.DIAMOND_CHESTPLATE)).addCriterion("diamond_leggings", InventoryChangeTrigger.TriggerInstance.hasItems(Items.DIAMOND_LEGGINGS)).addCriterion("diamond_boots", InventoryChangeTrigger.TriggerInstance.hasItems(Items.DIAMOND_BOOTS)).save(consumer, "story/shiny_gear");
      Advancement save6 = Advancement.Builder.advancement().parent(save5).display((ItemLike) Items.FLINT_AND_STEEL, (Component) new TranslatableComponent("advancements.story.enter_the_nether.title"), (Component) new TranslatableComponent("advancements.story.enter_the_nether.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("entered_nether", ChangeDimensionTrigger.TriggerInstance.changedDimensionTo(Level.NETHER)).save(consumer, "story/enter_the_nether");
      Advancement.Builder.advancement().parent(save6).display((ItemLike) Items.GOLDEN_APPLE, (Component) new TranslatableComponent("advancements.story.cure_zombie_villager.title"), (Component) new TranslatableComponent("advancements.story.cure_zombie_villager.description"), (ResourceLocation) null, FrameType.GOAL, true, true, false).addCriterion("cured_zombie", CuredZombieVillagerTrigger.TriggerInstance.curedZombieVillager()).save(consumer, "story/cure_zombie_villager");
      Advancement.Builder.advancement().parent(Advancement.Builder.advancement().parent(save6).display((ItemLike) Items.ENDER_EYE, (Component) new TranslatableComponent("advancements.story.follow_ender_eye.title"), (Component) new TranslatableComponent("advancements.story.follow_ender_eye.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("in_stronghold", LocationTrigger.TriggerInstance.located(LocationPredicate.inFeature(StructureFeature.STRONGHOLD))).save(consumer, "story/follow_ender_eye")).display((ItemLike) Blocks.END_STONE, (Component) new TranslatableComponent("advancements.story.enter_the_end.title"), (Component) new TranslatableComponent("advancements.story.enter_the_end.description"), (ResourceLocation) null, FrameType.TASK, true, true, false).addCriterion("entered_end", ChangeDimensionTrigger.TriggerInstance.changedDimensionTo(Level.END)).save(consumer, "story/enter_the_end");
   }
}
